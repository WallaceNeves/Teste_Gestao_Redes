pipeline {
    agent any

    stages {
        stage('Configuração do Ambiente') {
            steps {
                // Etapa de preparação do ambiente, como instalação de dependências, se necessário.
                echo 'Configurando ambiente...'
            }
        }

        stage('Backup do Roteador') {
            steps {
                // Executar o script Python para fazer o backup do roteador diretamente no pipeline
                script {
                    def output = sh script: 'python backup_router.py', returnStdout: true
                    writeFile file: "backup_router.cfg", text: output.trim()
                }
            }
        }
    } // Fechar o bloco "stages" aqui

    post {
        success {
            // Etapa para notificar sobre o resultado do backup em caso de sucesso
            emailext body: 'O pipeline foi executado com sucesso.',
                    subject: 'Notificação de Sucesso - Pipeline de Backup do Roteador',
                    to: 'uallfaceaprendiz@gmail.com'
        }
        failure {
            // Etapa para notificar sobre o resultado do backup em caso de falha
            emailext body: 'O pipeline falhou. Verifique o log para detalhes.',
                    subject: 'Notificação de Falha - Pipeline de Backup do Roteador',
                    to: 'uallfaceaprendiz@gmail.com'
        }
        always {
            // Etapa opcional para executar ações sempre após o pipeline, como limpar recursos temporários.
            echo 'etapa final...'
        }
    }
}
